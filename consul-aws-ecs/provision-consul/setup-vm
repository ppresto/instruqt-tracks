#!/bin/bash -l
set -e

# wait for AWS Credentials
sleep 20

CONSUL_VER=1.8.0

#install terraform
cd /tmp
echo "installing terraform..."
curl -O https://releases.hashicorp.com/terraform/0.13.5/terraform_0.13.5_linux_amd64.zip
unzip terraform_0.13.5_linux_amd64.zip
mv terraform /usr/local/bin/terraform
rm -f terraform_0.13.5_linux_amd64.zip

# env
export AWS_REGION=us-west-2

# path
echo "export PATH=/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" >> ~/.bashrc
echo "export AWS_REGION=${AWS_REGION}" >> ~/.bashrc


echo "Installing AWS CLI"
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install
rm -rf aws awscliv2.zip

# aws cli
aws configure set default.region ${AWS_REGION}
aws ec2 create-default-vpc

#ssh
aws ec2 import-key-pair --key-name "instruqt" --public-key-material fileb://~/.ssh/id_rsa.pub
eval `ssh-agent -s`

cat << EOF > ~/.ssh/config
Host *
    StrictHostKeyChecking no
EOF

#
### Install Consul CLI
#
echo "installing consul..."
cd /tmp && {
    if [[ ! -f consul_${CONSUL_VER}+ent_linux_amd64.zip ]]; then
        curl -O https://releases.hashicorp.com/consul/${CONSUL_VER}+ent/consul_${CONSUL_VER}+ent_linux_amd64.zip
        mv consul_${CONSUL_VER}+ent_linux_amd64.zip consul.zip
    fi
    unzip -qq "consul.zip"
    sudo mv "consul" "/usr/local/bin/consul"
    sudo chmod +x "/usr/local/bin/consul"
    rm -rf "consul.zip"
  }

#
### Install Vault
#
echo "installing vault..."
cd /tmp && {
    if [[ ! -f vault_1.6.3_linux_amd64.zip ]]; then
        curl -O https://releases.hashicorp.com/vault/1.6.3/vault_1.6.3_linux_amd64.zip
        mv vault_1.6.3_linux_amd64.zip vault.zip
    fi
    unzip -qq "vault.zip"
    sudo mv "vault" "/usr/local/bin/vault"
    sudo chmod +x "/usr/local/bin/vault"
    rm -rf "vault.zip"
  }

mkdir -p /root/aws
set-workdir /root/aws
cd /root/aws
echo "cloning assets..."
git clone -b acl https://github.com/ppresto/instruqt-tracks.git
#git clone https://github.com/ppresto/instruqt-tracks.git
cp -r instruqt-tracks/consul-aws-ecs/assets/consul .
cp -r instruqt-tracks/consul-aws-ecs/assets/packer .
cp -r instruqt-tracks/consul-aws-ecs/assets/vpc .
cp -r instruqt-tracks/consul-aws-ecs/assets/ecs .
cp -r instruqt-tracks/consul-aws-ecs/assets/consul-ecs-agent .
cp -r instruqt-tracks/consul-aws-ecs/assets/vault .
rm -rf instruqt-tracks

##################
# testing - Remove this section...
#mv /root/aws/consul/main.tf.acl /root/aws/consul/main.tf
#mv /root/aws/consul/ec2.tf.encrypt_gossip /root/aws/consul/ec2.tf
#mv /root/aws/consul/modules/is-immutable-aws-consul/scripts/install_hashitools_consul.sh.tpl.acl /root/aws/consul/modules/is-immutable-aws-consul/scripts/install_hashitools_consul.sh.tpl
##################


# create image
cd /root/aws/packer/consul
./run-linux.sh > packer.out &


#provision vpc
cd /root/aws/vpc
echo "Provision VPC ..."
/usr/local/bin/terraform init
/usr/local/bin/terraform apply -auto-approve

# Start up Visual Studio Code server
# Create VSC startup script
cat <<-EOF > /etc/systemd/system/code-server.service
[Unit]
Description=Code Server
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
User=root
ExecStart=/usr/bin/code-server --host 0.0.0.0 --port 8443 --cert --auth none /root/aws/consul

[Install]
WantedBy=multi-user.target
EOF

# Add AWS keys to systemd environment
systemctl import-environment AWS_ACCESS_KEY_ID
systemctl import-environment AWS_SECRET_ACCESS_KEY

# Start VSC
systemctl enable code-server
systemctl start code-server

# Wait for AMI to be available
#until aws ec2 describe-images --owners self --query 'Images[*].[ImageId]' --output text; do
until aws ec2 describe-images --region ${AWS_REGION} --filters "Name=tag:Owner,Values=ppresto@hashicorp.com" --output text | grep is-immutable-consul; do
    echo "Waiting for AWS AMI to be available"
    sleep 1
done

#aws ec2 describe-images --owners self
#aws ec2 describe-images --region ${AWS_REGION} --filters "Name=tag:Owner,Values=ppresto@hashicorp.com" --output text

exit 0
