#!/bin/bash -l
# set -e

# Allow instruqt time to do its thing
sleep 10

# install command line tools
snap install kubectl --classic
snap install helm --classic

# clone the terraform-guides repo
git clone https://github.com/ppresto/gcp-gke.git
GITDIR="/root/gcp-gke"

# Set workdir
set-workdir ${GITDIR}/us-west-primary


# Store our project ID as a Terraform env var
grep $INSTRUQT_GCP_PROJECT_GCP_PROJECT_PROJECT_ID /root/.bashrc || echo "export TF_VAR_gcp_project=\"$INSTRUQT_GCP_PROJECT_GCP_PROJECT_PROJECT_ID\"" >> /root/.bashrc
echo "export GOOGLE_PROJECT=\"$INSTRUQT_GCP_PROJECT_GCP_PROJECT_PROJECT_ID\"" >> /root/.bashrc

# Add GCP Credentials to our profile and env
export GOOGLE_CREDENTIALS=$(echo $INSTRUQT_GCP_PROJECT_GCP_PROJECT_SERVICE_ACCOUNT_KEY | base64 -d | jq 'tostring')
export TF_VAR_GOOGLE_CREDENTIALS="${GOOGLE_CREDENTIALS}"
echo "export GOOGLE_CREDENTIALS=$GOOGLE_CREDENTIALS" >> /root/.bashrc
#echo "export TF_VAR_GOOGLE_CREDENTIALS=$GOOGLE_CREDENTIALS" >> /root/.bashrc

# Create VSC startup script
cat <<-EOF > /etc/systemd/system/code-server.service
[Unit]
Description=Code Server
After=network.target
StartLimitIntervalSec=0

[Service]
Type=simple
Restart=always
RestartSec=1
User=root
ExecStart=/usr/bin/code-server --host 0.0.0.0 --port 8443 --cert --auth none ${GITDIR}

[Install]
WantedBy=multi-user.target
EOF

# Add GCP creds to systemd environment
systemctl import-environment INSTRUQT_GCP_PROJECT_GCP_PROJECT_PROJECT_ID
systemctl import-environment TF_VAR_project
systemctl import-environment GOOGLE_CREDENTIALS

# Start VSC
systemctl enable code-server
systemctl start code-server

if [[ ! -d ${GITDIR}/tmp ]]; then
  mkdir ${GITDIR}/tmp
fi

  cat <<-EOF > ${GITDIR}/tmp/vault-ent.hclic
{
  "text
}
EOF

# Create a catch-up script that enables the user to fast-forward
cat <<-EOF > /usr/bin/fastforward
#!/bin/bash
echo "******************************************************************"
echo "* Skip to Challenge Configuration Script"
echo "******************************************************************"
echo
echo "This script will set up your Terraform Cloud token and organization"
echo "configuration. Once that is done you may use the 'skip to challenge'"
echo "feature of Instruqt to fast-forward to a particular point in the"
echo "training."
echo
echo "Please enter your Terraform Cloud organization name."
read ORG
echo
echo "Please enter your workspace name."
read WORKSPACE
echo
echo "Please enter your Terraform Cloud user token."
read TOKEN
echo
echo "Please enter your GitHub user ID."
read GITUSERID
echo
echo "Please enter your GitHub password or personal access token."
read GITPWD
echo
echo "Please enter your GitHub user name (<first_name> <last_name>)."
read GITUSERNAME
echo
echo "Please enter your GitHub email."
read GITEMAIL
echo
echo "Please enter your oauth-id. You can find it at this URL:"
echo "https://app.terraform.io/app/${ORG}/settings/version-control"
echo "If you haven't set up VCS integration yet, simply hit enter."
read OAUTHID
echo
echo "Organization: \$ORG"
echo "Workspace   : \$WORKSPACE"
echo "Token       : \$TOKEN"
echo "GitHub User ID : \$GITUSERID"
echo "GitHub Password : \$GITPWD"
echo "GitHub User Name : \$GITUSERNAME"
echo "GitHub Email : \$GITEMAIL"
echo "OAuth ID    : \$OAUTHID"
echo
read -p "Do these look right to you? Y/n " -n 1 -r
echo
if [[ ! \$REPLY =~ ^[Yy]\$ ]]
then
  echo "Please try again."
  exit 1
fi
echo
echo "Saving your settings in /root/skipconfig.json"
cat <<-EOM > /root/skipconfig.json
{
  "org": "\$ORG",
  "workspace": "\$WORKSPACE",
  "token": "\$TOKEN",
  "gituserid": "\$GITUSERID",
  "gitpwd": "\$GITPWD",
  "gitusername": "\$GITUSERNAME",
  "gitemail": "\$GITEMAIL",
  "oauthid": "\$OAUTHID"
}
EOM

# Store the ORG in /root/.bashrc
grep \$ORG /root/.bashrc || echo "export ORG=\"\$ORG\"" >> /root/.bashrc

ponysay -f twilight -f applejack -f rainbow -f pinkie -f rarity -f fluttershy "Ready to Skip Challenges!"

EOF
chmod +x /usr/bin/fastforward

exit 0
