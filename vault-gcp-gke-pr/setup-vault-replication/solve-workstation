#!/bin/bash -l

# Enable bash history
HISTFILE=/root/.bash_history
set -o history

GITDIR="/root/gcp-gke"

cd ${GITDIR}/us-west

# GKE Cluster should be built already during initial setup.
#terraform init
#terraform apply -auto-approve
./setkubectl.sh

# Setup Primary
ext_ip=$(kubectl --context=primary get svc vault-primary-active-lb -o json | jq -r '.status.loadBalancer.ingress[].ip')
echo "Ext IP: ${ext_ip}"

kubectl exec -ti vault-primary-0 -- vault write -f sys/replication/performance/primary/enable primary_cluster_addr=https://${ext_ip}:8201

kubectl exec -ti vault-primary-0 -- vault write sys/replication/performance/primary/secondary-token id=secondary -format=json | tee ${GITDIR}/us-west/tmp/secondary-token.json

# Setup Secondary
sleep 30
cd ../us-central
./setkubectl.sh

token=$(jq -r '.wrap_info.token' < ${GITDIR}/us-west/tmp/secondary-token.json)
kubectl exec -ti vault-dr-0 -- vault write sys/replication/performance/secondary/enable primary_api_addr=http://${ext_ip}:8200 token=${token}

kubectl delete pods -l vault-active=false

#echo "Secondary DR Cluster Status:"
#kubectl exec -ti vault-dr-0 -- vault read sys/replication/performance/status
#echo "Secondary DR Cluster Status:"
#kubectl --context=primary exec -it vault-primary-0 -- vault read sys/replication/performance/status


# Setup Vault Namespaces (us-central)
cd ${GITDIR}/vault-administration/uscentral

# Set K8s, AppRole, and Vault Environment variables required to run Terraform.
source set-project-env.sh

terraform init
terraform apply -auto-approve
exit 0
